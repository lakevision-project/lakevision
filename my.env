# Default configuration for local demo catalog
# Change these if you're using an existing REST/Hive/Glue catalog
PYICEBERG_CATALOG__DEFAULT__TYPE=sql

# For local development:
PYICEBERG_CATALOG__DEFAULT__URI=sqlite:///$(pwd)/warehouse/sql-catalog.db
PYICEBERG_CATALOG__DEFAULT__WAREHOUSE=file://$(pwd)/warehouse

# For Docker/K8s:
# PYICEBERG_CATALOG__DEFAULT__URI=sqlite:////app/warehouse/sql-catalog.db
# PYICEBERG_CATALOG__DEFAULT__WAREHOUSE=file:///app/warehouse

PYICEBERG_CATALOG__DEFAULT__TOKEN=
PYICEBERG_CATALOG__DEFAULT__S3__ENDPOINT=
PYICEBERG_CATALOG__DEFAULT__S3__ACCESS_KEY_ID=
PYICEBERG_CATALOG__DEFAULT__S3__SECRET_ACCESS_KEY=
PYICEBERG_CATALOG__DEFAULT__PY_IO_IMPL=pyiceberg.io.fsspec.FsspecFileIO
# GCS 
GCP_KEYFILE=
PYICEBERG_CATALOG__GCS__PROJECT_ID=
PYICEBERG_CATALOG__GCS__DEFAULT_BUCKET_LOCATION=

#Provide any other Object Store and pyiceberg config your Lakehouse needs.

#Front end specific properties 
#when running in single container, leave it to this address.
PUBLIC_API_SERVER_SERVER_SIDE=http://localhost:8000  

#OIDC
#properties starting with PUBLIC_ are used on both fe and be servers
PUBLIC_AUTH_ENABLED=false
PUBLIC_OPENID_CLIENT_ID=   
OPEN_ID_CLIENT_SECRET=     #needed only on server (python)
PUBLIC_OPENID_PROVIDER_URL=
PUBLIC_REDIRECT_URI=       #this will be your front end base url

#Custom authorization implementation module, must follow authz.py
AUTHZ_MODULE_NAME=
AUTHZ_CLASS_NAME=
#Chat config
PUBLIC_CHAT_ENABLED=false
PUBLIC_CHAT_NAME=Chat
PUBLIC_CHAT_SERVER=ws://localhost:8000/ws

#Any extra link we want to put, would go in top right app selector
PUBLIC_EXTRA_LINK=
PUBLIC_EXTRA_LINK_TEXT=

# Name to be shown on top left
PUBLIC_COMPANY_NAME="Apache Iceberg"
PUBLIC_PLATFORM_NAME=Lakehouse


